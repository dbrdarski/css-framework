.ctrl-size{
  .each(@sizes, @template){
    .hash.map(@sizes, {
      .fn(@key, @val){
        &.size-@{key}{
          .ctrl-size(@val, @template);
        }
      }
    });
  }
}
.ctrl-size(@font-base, @template : @fn){
  .template(@size-ratio : 1; @line-height: 1.25; @padding: .875 1.25){
    @ratio : @size-ratio;
    @line-height-computed: @line-height;
    .padding(@padding);
    .padding-compute();
  }
  .padding(@padding) when (length(@padding) >= 1){
    @padding-top: extract(@padding, 1);
    @padding-right: extract(@padding, 1);
    @padding-bottom: extract(@padding, 1);
    @padding-left: extract(@padding, 1);
  }
  .padding(@padding) when (length(@padding) >= 2){
    @padding-right: extract(@padding, 2);
    @padding-left: extract(@padding, 2);
  }
  .padding(@padding) when (length(@padding) >= 3){
    @padding-bottom: extract(@padding, 3);
  }
  .padding(@padding) when (length(@padding) = 4){
    @padding-left: extract(@padding, 4);
  }
  .padding-compute(){
    @padding-base : @font-base * @ratio;
    @padding-computed : floor(@padding-base * @padding-top) floor(@padding-base * @padding-right) floor(@padding-base * @padding-bottom) floor(@padding-base * @padding-left);
  }
  .render(){
    &, .input-nested {
      font-size: @font-base;
      line-height: ceil(@font-base * @line-height-computed);
      @size: ceil(@font-base * @line-height-computed) + floor(@padding-base * @padding-top) + floor(@padding-base * @padding-bottom) + 2;
      min-height: @size;
      min-width: @size;
      padding: @padding-computed;
    }
    .input-nested{
      margin-left: floor(@padding-base*@padding-left*(-1));
      margin-right: floor(@padding-base*@padding-right*(-1));
      width: auto !important;
      &:first-child{
        margin-top: floor(@padding-base*@padding-top*(-1));
      }
      &:last-child{
        margin-bottom: floor(@padding-base*@padding-bottom*(-1));
      }
    }
  }
  @template();
  .fn();
  .render();
}

.ctrl-colors{
  .each(@colors, @template){
    .hash.map(@colors, {
      .fn(@key, @val){
        &.btn-@{key}{
          .ctrl-colors(@val, @template);
        }
      }
    });
  }
}
.ctrl-colors(@color; @template: @fn){
    @template();
  .fn(@color);
}


.form-controls(){
  .form-group{
    &:extend(.clearfix all);

    margin-top: @grid-gutter-width / 2;
    &:first-child{
      margin-top: 0;
    }
    .input-label{
      display: block;
      width: 100%;
      float: left;
      margin-bottom: 5px;
    }
    .text-control, .input-group{
      width: 100%;
    }
    .media.map(min, {
      .fn(@size){
        form.horizontal-@{size} & .input-label{
          width: 120px;
          & + .text-control, & + .input-group{
            width: ~"calc(100% - 120px)";
            & + .error-msg{
              padding-left: 120px;
            }
          }
          & + .cgroup{
            margin-top: 0px;
          }
        }
      }
    });
    form  & .input-label{
      & + .text-control, & + .input-group{
        width: 100%;
      }
    }
  }
  .checkbox, .radiobutton{
    .cgroup-horizontal .c-item + .c-item{
      margin-left: 20px;
    }
    .cgroup-vertical .c-item{
      display: block;
    }
    .cgroup{
      margin-top: 10px;
    }

    .cgroup-horizontal .c-item + .c-item{
      margin-left: 20px;
    }
    .cgroup-vertical .c-item{
      display: block;
    }
    .cgroup{
      margin-top: 10px;
    }
  }  

  .input-group{
    display: inline-table;
    > input{
      float: left;
    }
    .text-control{
      display: table-cell;
      width: 100%;
    }
  }
  
  .input-group-addon{
    // border-radius: 4px;
    &:extend(.gui all);
    display: table-cell;
    vertical-align: middle;
    width: 1px;
    background: #aaa;
    border-color: #aaa;
    color: #555;
    .text-control{
      &:not(:first-child){
        .border-left-radius(0);
      }
      &:not(:last-child){
        .border-right-radius(0);
      }
    }
    &:not(:last-child) {
      .border-right-radius(0);
    }
    &:not(:first-child) {
      .border-left-radius(0);
    }
  }
  .required-info{
    font-size: small;
    padding: 10px;
  }
}

.error-msg{
  display: none;
  font-size: .8125em;
  padding-top: 10px;
}

.text-control.error{
  color: @brand-danger;
}

.select-container, .select-container .options-container{
  &:extend(.text-control all);
  height: 0;
  border-width: 0;
}

.cgroup .c-item > input:focus{
  outline: 0 none;
  & + .radio-label,
  & + .checkbox-label{
    background: fade(#333, 15);
    box-shadow: 0 0 0 2px fade(#333, 15);
    border-radius: 2px;
    padding-left: 2px;
    padding-right: 2px;
  }
}